apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ include "elasticsearch.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "elasticsearch.labels" . | nindent 4 }}
spec:
  version: {{ .Values.version }}
  nodeSets:
  {{- $nodeSets := list -}}
  {{- if eq .Values.discoveryType "cluster" }}
  {{- $nodeSets = .Values.nodeSets -}}
  {{- else }}
  {{- $nodeSets = list (index .Values.nodeSets 0) -}}
  {{- end }}
  {{- range $nodeSets }}
  {{- if eq $.Values.discoveryType "cluster" }}
  - name: {{ .name }}
    count: {{ .count }}
    config:
      node.roles: [{{- .roles | include "elasticsearch.nodeRoles" }}]
  {{- else }}
  - name: single-node
    count: 1
  {{- end }}
    podTemplate:
      metadata:
        labels:
          name: {{ include "elasticsearch.fullname" $ }}-{{ .name }}
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            {{- range $key, $val := $.Values.plugins }}
            bin/elasticsearch-plugin install --batch {{ $val }}
            {{- end}}
        containers:
        - name: elasticsearch
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          - name: ES_JAVA_OPTS
            value: {{ .javaOpts | quote }}
          {{- if eq $.Values.discoveryType "single-node" }}
          - name: discovery.type
            value: "single-node"
          {{- end }}
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            successThreshold: {{ $.Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
    {{- if ne $.Values.storageClass ""}}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .volumeClaim.storageRequest }}
        storageClassName: {{ $.Values.storageClass | quote }}
    {{- end }}
  {{- end }}
